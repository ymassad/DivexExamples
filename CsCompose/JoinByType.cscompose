using System;
using DIVEX.Core;
using static DIVEX.Core.DivexUtils;

public interface ILogger
{
    void Log(string message);  
}
public class ConsoleLogger : ILogger
{
    public void Log(string message) => Console.WriteLine(message);
}

public record Document(int Id);

[DivexCompose]
public static partial class Program
{
    public static void ProcessDocument(
      Document document,
      Func<Document, Document> translate,
      Action<Document> save,
      ILogger logger)
    {
        logger.Log("Processing document " + document.Id);
        var translatedDocument = translate(document);
        save(translatedDocument); 
    }
  
    public static Document Translate(
      Document document,
      ILogger log)
    {
        log.Log("Translating document " + document.Id);
        return document;
    }
  
    public static void SaveDocument(Document document, ILogger logger)
    {
        logger.Log("Saving document " + document.Id);
    }
  
    public static void Main()
    {
        var process = ProcessDocument
            [save: SaveDocument, translate: Translate];
      
        var process2 = process.Join<ILogger>(logger);
      
        process2(new Document(5), new ConsoleLogger());
    }
}
/*
Processing document 5
Translating document 5
Saving document 5

*/
